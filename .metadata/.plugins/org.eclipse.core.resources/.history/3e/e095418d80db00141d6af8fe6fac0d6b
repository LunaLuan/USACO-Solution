import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;


public class milk2 {
	

	static class ND {
		int S;
		int F;
		
		public ND(int s,int f){
			S=s;F=f;
		}
	}
	
	static class NDcomparator implements Comparator<ND> {

		@Override
		public int compare(ND nd1, ND nd2) {
			// TODO Auto-generated method stub
			return nd1.S-nd2.S;
		}

		
	}
	
	public static int max(int a,int b){
		if(a>b)	return a;
		return b;
	}

	public static void main(String[] args) throws IOException{
		Scanner in=new Scanner(new File("milk2.in"));
		PrintWriter out=new PrintWriter(new File("milk2.out"));
		
		int size=in.nextInt();
		ND[] nd=new ND[size];
		
		System.out.println(size);
		
		//System.out.println(in.next());
		//in.next();
		for(int i=0;i<size;i++){
			nd[i]=new ND(in.nextInt(),in.nextInt());
		}
		
		Arrays.sort(nd,new NDcomparator());
		
		int max_continue=0,max_no_milk=0;
		
		for(int i=0;i<size-1;i++){
			for(int k=i;k<size;k++){
				if(nd[k].S<=nd[i].F){
					int con=max(nd[i].F-nd[i].S,nd[k].F-nd[i].S);
					max_continue=max(max_continue,con);
				}
				else{
					max_no_milk=max(max_no_milk,nd[k].S-nd[i].F);
				}
			}
		}
		
		out.println(max_continue+" "+max_no_milk);
		out.close();
		
		System.exit(0);
	}
}
